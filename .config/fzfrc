# FZF style definition
# - repeat history
fr() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) |
	fzf +s --tac | sed -r 's/ *[0-9]*\*? *//' | 
	sed -r 's/\\/\\\\/g')
}
# fkill - kill processes - list only the ones you can kill. Modified the earlier script.
fkill() {
    local pid 
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  
    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  
}

#######################################
# #--- Custom searches ---#
#######################################
select_file() {
	given_file="$1"
	#fd --type file --follow --hidden --exclude .git | fzf --query="$given_file"
	fzf --query="$given_file"
}

# Full system search with preview and EDITOR setup
f/() {
	cd /
  previous_file="$1"
  file_to_edit=`select_file $previous_file`

  if [ -n "$file_to_edit" ] ; then
    "$EDITOR" "$file_to_edit"
    main "$file_to_edit"
  fi
}
# Full home folder search with preview and EDITOR setup
fh() {
	cd /home/niko
  previous_file="$1"
  file_to_edit=`select_file $previous_file`

  if [ -n "$file_to_edit" ] ; then
    "$EDITOR" "$file_to_edit"
    main "$file_to_edit"
  fi
}

#######################################
# #--- Custom Dots files functions---#
#######################################

dD(){
	dots status -s |\
	cut -c4- |\
	fzf --no-sort --reverse --bind 'ctrl-v:execute(/usr/bin/git --git-dir=$HOME/.dots --work-tree=$HOME diff	{})' 
}

dA(){
	dots status -s |\
	cut -c4- |\
	fzf --no-sort --reverse --bind 'ctrl-a:execute(/usr/bin/git --git-dir=$HOME/.dots --work-tree=$HOME add	{})' 
}
dC(){
	dots status -s |\
	cut -c4- |\
	fzf --no-sort --reverse --bind 'ctrl-c:execute(/usr/bin/git --git-dir=$HOME/.dots --work-tree=$HOME commit {})' 
}
